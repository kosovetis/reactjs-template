// src/Results.tsx
import { useMemo, useEffect } from "react";

const archetypeDescriptions = {
  caregiver: { name: "–ó–ê–ë–û–¢–õ–ò–í–´–ô", emoji: "ü§≤", color: "#10B981", description: "–ó–∞—â–∏—â–∞–µ—Ç –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç ‚Äî —Å–ª–æ–≤–Ω–æ –Ω–∞–¥—ë–∂–Ω—ã–π –¥—Ä—É–≥, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç –ø–ª–µ—á–æ, –¥–µ–ª–∞—è –º–∏—Ä –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ.", traits: ["–ó–∞–±–æ—Ç–∞", "–°–æ–ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ", "–ñ–µ–ª–∞–Ω–∏–µ –ø–æ–º–æ—á—å", "–ê–ª—å—Ç—Ä—É–∏–∑–º"], examples: ["Johnson & Johnson", "Nivea", "Pampers"] },
  jester: { name: "–®–£–¢", emoji: "üé≠", color: "#F59E0B", description: "–°–Ω–∏–º–∞–µ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ, –ø—Ä–æ–≥–æ–Ω—è–µ—Ç —Å–∫—É–∫—É –∏ –∑–∞—Ä—è–∂–∞–µ—Ç —é–º–æ—Ä–æ–º, –ø–æ–º–æ–≥–∞—è –∂–∏—Ç—å –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–æ–º.", traits: ["–Æ–º–æ—Ä", "–í–µ—Å–µ–ª—å–µ", "–û–ø—Ç–∏–º–∏–∑–º", "–õ–µ–≥–∫–æ—Å—Ç—å"], examples: ["Burger King", "Old Spice", "Skittles"] },
  magician: { name: "–ú–ê–ì", emoji: "ü™Ñ", color: "#8B5CF6", description: "–í–æ–ø–ª–æ—â–∞–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ, —Ä–∞—Å—à–∏—Ä—è—è –≥—Ä–∞–Ω–∏—Ü—ã —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è –ª—é–¥–µ–π.", traits: ["–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏", "–í–∏–∑–∏–æ–Ω–µ—Ä—Å—Ç–≤–æ", "–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"], examples: ["Apple", "Disney", "Dyson"] },
  hero: { name: "–ì–ï–†–û–ô", emoji: "üèÜ", color: "#DC2626", description: "–ë—Ä–æ—Å–∞–µ—Ç –≤—ã–∑–æ–≤ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º –∏ –≤–µ–¥—ë—Ç –∑–∞ —Å–æ–±–æ–π, –º–æ—Ç–∏–≤–∏—Ä—É—è –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Å–º–µ–ª—ã—Ö —Ü–µ–ª–µ–π.", traits: ["–ú—É–∂–µ—Å—Ç–≤–æ", "–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–ß–µ—Å—Ç—å", "–ú–æ—Ç–∏–≤–∞—Ü–∏—è"], examples: ["Nike", "Red Bull", "BMW"] },
  creator: { name: "–¢–í–û–†–ï–¶", emoji: "üé®", color: "#7C3AED", description: "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—é –∏ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ, –≤–æ–ø–ª–æ—â–∞—è –∏–¥–µ–∏ –≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏ –ø–æ–æ—â—Ä—è—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–Ω–∏–µ.", traits: ["–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", "–í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "–°–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ", "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å"], examples: ["Adobe", "LEGO", "Pinterest"] },
  rebel: { name: "–ë–£–ù–¢–ê–†–¨", emoji: "‚ö°", color: "#991B1B", description: "–ë—Ä–æ—Å–∞–µ—Ç –≤—ã–∑–æ–≤ —Å—Ç–∞—Ç—É—Å-–∫–≤–æ, —à–æ–∫–∏—Ä—É–µ—Ç –∏ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞, –¥–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–≤–æ–±–æ–¥—ã.", traits: ["–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª", "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ", "–î–µ—Ä–∑–æ—Å—Ç—å", "–®–æ–∫"], examples: ["Harley-Davidson","Diesel"] },
  sage: { name: "–ú–£–î–†–ï–¶", emoji: "üìö", color: "#1E40AF", description: "–†–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –∏—Å—Ç–∏–Ω—É –∏ –¥–µ–ª–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏, –∏–∑–±–∞–≤–ª—è—è –æ—Ç –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–π –∏ –ø—Ä–æ—è—Å–Ω—è—è –∫–∞—Ä—Ç–∏–Ω—É –º–∏—Ä–∞.", traits: ["–ú—É–¥—Ä–æ—Å—Ç—å", "–ó–Ω–∞–Ω–∏—è", "–ò—Å—Ç–∏–Ω–∞", "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç"], examples: ["Google", "National Geographic", "BBC"] },
  everyman: { name: "–°–õ–ê–í–ù–´–ô –ú–ê–õ–´–ô", emoji: "ü§ù", color: "#059669", description: "¬´–¢–∞–∫–æ–π –∂–µ, –∫–∞–∫ —Ç—ã¬ª: –ø–æ–Ω–∏–º–∞–µ—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–±–æ—Ç—ã –∏ —Å–æ–∑–¥–∞—ë—Ç –æ—â—É—â–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ —É—é—Ç–∞, –≥–¥–µ –∫–∞–∂–¥–æ–º—É —Ä–∞–¥—ã.", traits: ["–ü—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å", "–ü–æ–Ω—è—Ç–Ω–æ—Å—Ç—å", "–î—Ä—É–∂–µ–ª—é–±–∏–µ", "–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"], examples: ["IKEA", "–ü—è—Ç–µ—Ä–æ—á–∫–∞"] },
  ruler: { name: "–ü–†–ê–í–ò–¢–ï–õ–¨", emoji: "üëë", color: "#7C2D12", description: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –∏ –ø–æ–¥–Ω–∏–º–∞–µ—Ç –ø–ª–∞–Ω–∫—É, –æ–±–µ—â–∞—è –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å—Ç–∞—Ç—É—Å —Ç–µ–º, –∫—Ç–æ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –Ω–∏–º.", traits: ["–õ–∏–¥–µ—Ä—Å—Ç–≤–æ", "–í–ª–∏—è–Ω–∏–µ", "–ü—Ä–µ—Å—Ç–∏–∂"], examples: ["Mercedes-Benz", "Rolex"] },
  innocent: { name: "–ù–ï–í–ò–ù–ù–´–ô", emoji: "üå∏", color: "#DB2777", description: "–ö–∞–∫ –ª—É—á —Å–≤–µ—Ç–∞: –¥–∞—Ä–∏—Ç –æ—â—É—â–µ–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã, –Ω–∞–¥–µ–∂–¥—ã –∏ —Ä–∞–¥–æ—Å—Ç–∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤.", traits: ["–û–ø—Ç–∏–º–∏–∑–º", "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å", "–ß–∏—Å—Ç–æ—Ç–∞", "–ü—Ä–æ—Å—Ç–æ—Ç–∞"], examples: ["Coca-Cola", "Kinder"] },
  explorer: { name: "–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨", emoji: "üß≠", color: "#16A34A", description: "–†–∞—Å—à–∏—Ä—è–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –∏ –∑–æ–≤—ë—Ç –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º, –ø–æ–º–æ–≥–∞—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —á—É–≤—Å—Ç–≤–æ —Å–≤–æ–±–æ–¥—ã.", traits: ["–°–≤–æ–±–æ–¥–∞", "–ü–æ–∏—Å–∫", "–ù–µ—É—Ç–æ–º–∏–º–æ—Å—Ç—å"], examples: ["Jeep", "The North Face", "GoPro"] },
  lover: { name: "–õ–Æ–ë–û–í–ù–ò–ö", emoji: "‚ù§Ô∏è", color: "#BE185D", description: "–û—á–∞—Ä–æ–≤—ã–≤–∞–µ—Ç —ç—Å—Ç–µ—Ç–∏–∫–æ–π –∏ —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é, –¥–∞—Ä–∏—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ, —Å–æ–∑–¥–∞–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≥–ª—É–±–æ–∫–æ–π —Å–≤—è–∑–∏.", traits: ["–ß—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "–ù–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ", "–≠—Å—Ç–µ—Ç–∏–∫–∞", "–£–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ"], examples: ["Victoria's Secret", "Godiva"] }
};

interface ResultsProps {
  results?: { blockIndex: number; selected: string[]; ranked: string[] }[];
  onRestart: () => void;
  idToArch: Record<string, string>;
}

export default function Results({ results, onRestart, idToArch }: ResultsProps) {
  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const archetypeScores = useMemo(() => {
    if (!results) return {};
    const scores: Record<string, number> = {};
    results.forEach(({ ranked }) => {
      ranked.forEach((id, index) => {
        const archetype = idToArch[id];
        if (archetype) {
          const points = 5 - index;
          scores[archetype] = (scores[archetype] || 0) + points;
        }
      });
    });
    return scores;
  }, [results, idToArch]);

  const sortedArchetypes = Object.entries(archetypeScores).sort(([, a], [, b]) => b - a);
  const [first, second] = sortedArchetypes;

  if (!results || !first) return <div>–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞—Ä—Ö–µ—Ç–∏–ø</div>;

  const containerStyle = {
    padding: "24px",
    maxWidth: "800px",
    margin: "0 auto",
    fontFamily: "'Montserrat', sans-serif",
    paddingBottom: "32px"
  };

  const mainTitleStyle = {
    fontSize: "28px",
    fontWeight: "700",
    textAlign: "center" as const,
    marginBottom: "32px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#1f2937"
  };

  const archetypeContainerStyle = {
    marginBottom: "48px",
    textAlign: "center" as const,
    padding: "24px",
    borderRadius: "16px",
    backgroundColor: "#f9fafb",
    boxShadow: "0 4px 6px rgba(0, 0, 0, 0.1)"
  };

  const emojiStyle = {
    fontSize: "48px",
    marginBottom: "16px",
    display: "block"
  };

  const archetypeNameStyle = {
    fontSize: "24px",
    fontWeight: "700",
    marginBottom: "16px",
    fontFamily: "'Montserrat', sans-serif"
  };

  const descriptionStyle = {
    fontSize: "18px",
    lineHeight: "1.6",
    maxWidth: "600px",
    margin: "0 auto 24px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#374151"
  };

  const sectionTitleStyle = {
    fontSize: "18px",
    fontWeight: "600",
    marginBottom: "12px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#1f2937"
  };

  const traitsListStyle = {
    listStyle: "none",
    padding: 0,
    margin: "0 0 24px 0",
    display: "flex",
    flexWrap: "wrap" as const,
    justifyContent: "center",
    gap: "8px"
  };

  const traitItemStyle = {
    background: "#e5e7eb",
    padding: "6px 12px",
    borderRadius: "20px",
    fontSize: "14px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#374151"
  };

  const examplesStyle = {
    fontSize: "16px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#6b7280"
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø–ª–∞—à–∫–∞ —Å —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º, –±–µ–ª—ã–º —à—Ä–∏—Ñ—Ç–æ–º –∏ –∫—Ä—É–ø–Ω—ã–º —ç–º–æ–¥–∂–∏ –¥–µ–≤—É—à–∫–∏
  const ctaBlockStyle = {
    padding: "32px",
    backgroundColor: "#3b82f6",
    borderRadius: "12px",
    textAlign: "center" as const,
    marginBottom: "32px",
    border: "2px solid #2563eb",
    position: "relative" as const
  };

  // –ë–æ–ª—å—à–æ–π —ç–º–æ–¥–∂–∏ –∫–∞–∫ –Ω–∞ –ø–ª–∞—à–∫–∞—Ö –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
  const ctaEmojiStyle = {
    fontSize: "48px",
    marginBottom: "20px",
    display: "block",
    textAlign: "center" as const
  };

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ CTA
  const ctaHeadlineStyle = {
    fontSize: "22px",
    fontWeight: "700",
    lineHeight: "1.3",
    marginBottom: "16px",
    fontFamily: "'Montserrat', sans-serif",
    color: "white"
  };

  // –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç CTA
  const ctaTextStyle = {
    fontSize: "16px",
    lineHeight: "1.5",
    marginBottom: "24px",
    fontFamily: "'Montserrat', sans-serif",
    color: "white",
    opacity: 0.95
  };

  const ctaButtonStyle = {
    display: "inline-block",
    backgroundColor: "white",
    color: "#3b82f6",
    padding: "16px 32px",
    borderRadius: "8px",
    fontSize: "16px",
    fontWeight: "700",
    textDecoration: "none",
    fontFamily: "'Montserrat', sans-serif",
    transition: "all 0.2s ease",
    border: "2px solid white",
    textTransform: "uppercase" as const,
    letterSpacing: "0.5px"
  };

  const restartButtonStyle = {
    background: "none",
    border: "none",
    color: "#3b82f6",
    fontSize: "16px",
    fontFamily: "'Montserrat', sans-serif",
    textDecoration: "underline",
    cursor: "pointer",
    padding: "8px 0",
    display: "block",
    margin: "0 auto"
  };

  return (
    <div style={containerStyle}>
      <h1 style={mainTitleStyle}>–í–∞—à–∏ –∞—Ä—Ö–µ—Ç–∏–ø—ã:</h1>

      {[first, second].map(([arch], index) => {
        const data = archetypeDescriptions[arch as keyof typeof archetypeDescriptions];
        if (!data) return null;

        return (
          <div key={arch} style={archetypeContainerStyle}>
            <span style={emojiStyle}>{data.emoji}</span>
            <h2 style={{ ...archetypeNameStyle, color: "#1f2937" }}>
              <span style={{ color: "#1f2937" }}>{index === 0 ? "–û–°–ù–û–í–ù–û–ô: " : "–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô: "}</span>
              <span style={{ color: data.color }}>{data.name}</span>
            </h2>
            <p style={descriptionStyle}>{data.description}</p>

            <div>
              <h3 style={sectionTitleStyle}>–ö–ª—é—á–µ–≤—ã–µ —á–µ—Ä—Ç—ã:</h3>
              <ul style={traitsListStyle}>
                {data.traits.map((trait, idx) => (
                  <li key={idx} style={traitItemStyle}>{trait}</li>
                ))}
              </ul>
            </div>

            <div>
              <h3 style={sectionTitleStyle}>–ü—Ä–∏–º–µ—Ä—ã –±—Ä–µ–Ω–¥–æ–≤:</h3>
              <p style={examplesStyle}>{data.examples.join(", ")}</p>
            </div>
          </div>
        );
      })}

      <div style={ctaBlockStyle}>
        <span style={ctaEmojiStyle}>üë©‚Äçüíº</span>
        <h3 style={ctaHeadlineStyle}>
          –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?
        </h3>
        <div style={{ ...ctaTextStyle, textAlign: "center" as const }}>
          <p style={{ marginBottom: "16px" }}>
            –ê—Ä—Ö–µ—Ç–∏–ø ‚Äì —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –≤—Å–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –±—Ä–µ–Ω–¥–∞.
          </p>
          <p style={{ marginBottom: "16px" }}>
            –£ –º–µ–Ω—è –µ—Å—Ç—å —Ü–µ–ª—ã–π <strong>–ì–ê–ô–î</strong>, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–∑–Ω–∞–µ—Ç–µ —Ç–µ–º–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É –≤–∞—à–µ–≥–æ –∞—Ä—Ö–µ—Ç–∏–ø–∞ –∏ –µ–≥–æ —Å—É–ø–µ—Ä—Å–∏–ª—É, –∫–∞–∫–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –æ–Ω —Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∏ –∫–∞–∫ –Ω–µ –ø–æ–ø–∞—Å—Ç—å –≤ –ª–æ–≤—É—à–∫—É.
          </p>
          <p style={{ marginBottom: "0" }}>
            –ê –µ—â–µ —É–≤–∏–¥–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–µ–π—Å–∞—Ö, –∫–∞–∫ –∞—Ä—Ö–µ—Ç–∏–ø—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ.
          </p>
    </div>
        <a
          href="https://kosovetis.notion.site/6374b409220047f881a3d07b768e5cba?v=24db274a728f80858cbd000cacebf08e"
          target="_blank"
          rel="noopener noreferrer"
          style={ctaButtonStyle}
          onMouseEnter={(e) => {
            e.currentTarget.style.backgroundColor = "#f3f4f6";
            e.currentTarget.style.color = "#1f2937";
            e.currentTarget.style.transform = "translateY(-2px)";
            e.currentTarget.style.boxShadow = "0 4px 8px rgba(0, 0, 0, 0.2)";
          }}
          onMouseLeave={(e) => {
            e.currentTarget.style.backgroundColor = "white";
            e.currentTarget.style.color = "#3b82f6";
            e.currentTarget.style.transform = "translateY(0)";
            e.currentTarget.style.boxShadow = "none";
          }}
        >
          –ü–æ–ª—É—á–∏—Ç—å –ì–∞–π–¥
        </a>
      </div>

      <div style={{ textAlign: "center" }}>
        <button onClick={onRestart} style={restartButtonStyle}>
          –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
        </button>
      </div>
    </div>
  );
}