// src/Results.tsx
import { useMemo, useEffect } from "react";

const archetypeDescriptions = {
  caregiver: { name: "–ó–ê–ë–û–¢–õ–ò–í–´–ô", emoji: "ü§≤", color: "#10B981", description: "–í–∞—à –±—Ä–µ–Ω–¥ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –Ω–∏—Ö. –í—ã —Å—Ç–∞–≤–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã—à–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã.", traits: ["–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ", "–©–µ–¥—Ä–æ—Å—Ç—å", "–ñ–µ–ª–∞–Ω–∏–µ –ø–æ–º–æ—á—å", "–ê–ª—å—Ç—Ä—É–∏–∑–º"], examples: ["Johnson & Johnson", "Volvo", "UNICEF"] },
  jester: { name: "–®–£–¢", emoji: "üé≠", color: "#F59E0B", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –≤–µ—Å–µ–ª—å–µ –≤ –∂–∏–∑–Ω—å –ª—é–¥–µ–π. –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–æ–º.", traits: ["–Æ–º–æ—Ä", "–í–µ—Å–µ–ª—å–µ", "–û–ø—Ç–∏–º–∏–∑–º", "–õ–µ–≥–∫–æ—Å—Ç—å"], examples: ["Ben & Jerry's", "Old Spice", "Skittles"] },
  magician: { name: "–ú–ê–ì", emoji: "ü™Ñ", color: "#8B5CF6", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –º–µ—á—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –í—ã —Å–æ–∑–¥–∞–µ—Ç–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.", traits: ["–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏", "–í–∏–¥–µ–Ω–∏–µ", "–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"], examples: ["Apple", "Disney", "Tesla"] },
  hero: { name: "–ì–ï–†–û–ô", emoji: "üèÜ", color: "#DC2626", description: "–í–∞—à –±—Ä–µ–Ω–¥ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –ª—é–¥–µ–π –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π. –í—ã –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç–µ –Ω–∞ –ø–æ–¥–≤–∏–≥–∏.", traits: ["–ú—É–∂–µ—Å—Ç–≤–æ", "–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–ß–µ—Å—Ç—å", "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ"], examples: ["Nike", "FedEx", "BMW"] },
  creator: { name: "–¢–í–û–†–ï–¶", emoji: "üé®", color: "#7C3AED", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –≤—ã—Ä–∞–∂–∞—Ç—å —Å–µ–±—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –í—ã —Ü–µ–Ω–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å.", traits: ["–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", "–í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "–°–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ", "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å"], examples: ["Adobe", "LEGO", "Pinterest"] },
  rebel: { name: "–ë–£–ù–¢–ê–†–¨", emoji: "‚ö°", color: "#991B1B", description: "–í–∞—à –±—Ä–µ–Ω–¥ –±—Ä–æ—Å–∞–µ—Ç –≤—ã–∑–æ–≤ —Å—Ç–∞—Ç—É—Å-–∫–≤–æ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞. –í—ã –∑–∞ —Ä–µ–≤–æ–ª—é—Ü–∏—é.", traits: ["–†–µ–≤–æ–ª—é—Ü–∏—è", "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ", "–î–∏–∫–æ—Å—Ç—å", "–®–æ–∫"], examples: ["Harley-Davidson", "Virgin", "Diesel"] },
  sage: { name: "–ú–£–î–†–ï–¶", emoji: "üìö", color: "#1E40AF", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –ø–æ–Ω–∏–º–∞—Ç—å –º–∏—Ä. –í—ã –¥–µ–ª–∏—Ç–µ—Å—å –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –º—É–¥—Ä–æ—Å—Ç—å—é.", traits: ["–ú—É–¥—Ä–æ—Å—Ç—å", "–ó–Ω–∞–Ω–∏—è", "–ò—Å—Ç–∏–Ω–∞", "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç"], examples: ["Google", "Harvard", "BBC"] },
  everyman: { name: "–°–õ–ê–í–ù–´–ô –ú–ê–õ–´–ô", emoji: "ü§ù", color: "#059669", description: "–í–∞—à –±—Ä–µ–Ω–¥ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –∏ —Å–æ–µ–¥–∏–Ω—è—Ç—å –ª—é–¥–µ–π. –í—ã —Ü–µ–Ω–∏—Ç–µ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å.", traits: ["–ü—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å", "–†–µ–∞–ª–∏–∑–º", "–°–æ—á—É–≤—Å—Ç–≤–∏–µ", "–î—Ä—É–∂–µ–ª—é–±–∏–µ"], examples: ["IKEA", "Home Depot", "Target"] },
  ruler: { name: "–ü–†–ê–í–ò–¢–ï–õ–¨", emoji: "üëë", color: "#7C2D12", description: "–í–∞—à –±—Ä–µ–Ω–¥ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏–µ –∏ —É—Å–ø–µ—Ö. –í—ã —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –ª–∏–¥–µ—Ä—Å—Ç–≤—É –∏ –∫–æ–Ω—Ç—Ä–æ–ª—é.", traits: ["–õ–∏–¥–µ—Ä—Å—Ç–≤–æ", "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "–ö–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å", "–ü—Ä–µ—Å—Ç–∏–∂"], examples: ["Mercedes-Benz", "Rolex", "IBM"] },
  innocent: { name: "–ù–ï–í–ò–ù–ù–´–ô", emoji: "üå∏", color: "#DB2777", description: "–í–∞—à –±—Ä–µ–Ω–¥ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å—á–∞—Å—Ç—å—é –∏ –ø—Ä–æ—Å—Ç–æ—Ç–µ. –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –ª—é–¥—è–º —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —Ö–æ—Ä–æ—à–æ.", traits: ["–û–ø—Ç–∏–º–∏–∑–º", "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å", "–ß–∏—Å—Ç–æ—Ç–∞", "–ü—Ä–æ—Å—Ç–æ—Ç–∞"], examples: ["Coca-Cola", "McDonald's", "Dove"] },
  explorer: { name: "–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨", emoji: "üß≠", color: "#16A34A", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –Ω–∞–π—Ç–∏ —Å–µ–±—è —á–µ—Ä–µ–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞. –í—ã —Ü–µ–Ω–∏—Ç–µ —Å–≤–æ–±–æ–¥—É –∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å.", traits: ["–°–≤–æ–±–æ–¥–∞", "–ê—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å", "–ê–º–±–∏—Ü–∏–∏", "–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥—Å—Ç–≤–æ"], examples: ["Jeep", "The North Face", "Red Bull"] },
  lover: { name: "–õ–Æ–ë–û–í–ù–ò–ö", emoji: "‚ù§Ô∏è", color: "#BE185D", description: "–í–∞—à –±—Ä–µ–Ω–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—é–±–æ–≤—å –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å. –í—ã —Ü–µ–Ω–∏—Ç–µ —Å—Ç—Ä–∞—Å—Ç—å –∏ –±–ª–∏–∑–æ—Å—Ç—å.", traits: ["–°—Ç—Ä–∞—Å—Ç—å", "–ë–ª–∏–∑–æ—Å—Ç—å", "–ö—Ä–∞—Å–æ—Ç–∞", "–ü—Ä–∏–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å"], examples: ["Victoria's Secret", "Hallmark", "Godiva"] }
};

interface ResultsProps {
  results?: { blockIndex: number; selected: string[]; ranked: string[] }[];
  onRestart: () => void;
  idToArch: Record<string, string>;
}

export default function Results({ results, onRestart, idToArch }: ResultsProps) {
  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const archetypeScores = useMemo(() => {
    if (!results) return {};
    const scores: Record<string, number> = {};
    results.forEach(({ ranked }) => {
      ranked.forEach((id, index) => {
        const archetype = idToArch[id];
        if (archetype) {
          const points = 5 - index;
          scores[archetype] = (scores[archetype] || 0) + points;
        }
      });
    });
    return scores;
  }, [results, idToArch]);

  const sortedArchetypes = Object.entries(archetypeScores).sort(([, a], [, b]) => b - a);
  const [first, second] = sortedArchetypes;

  if (!results || !first) return <div>–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞—Ä—Ö–µ—Ç–∏–ø</div>;

  const containerStyle = {
    padding: "24px",
    maxWidth: "800px",
    margin: "0 auto",
    fontFamily: "'Montserrat', sans-serif",
    paddingBottom: "32px"
  };

  const mainTitleStyle = {
    fontSize: "28px",
    fontWeight: "700",
    textAlign: "center" as const,
    marginBottom: "32px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#1f2937"
  };

  const archetypeContainerStyle = {
    marginBottom: "48px",
    textAlign: "center" as const,
    padding: "24px",
    borderRadius: "16px",
    backgroundColor: "#f9fafb",
    boxShadow: "0 4px 6px rgba(0, 0, 0, 0.1)"
  };

  const emojiStyle = {
    fontSize: "48px",
    marginBottom: "16px",
    display: "block"
  };

  const archetypeNameStyle = {
    fontSize: "24px",
    fontWeight: "700",
    marginBottom: "16px",
    fontFamily: "'Montserrat', sans-serif"
  };

  const descriptionStyle = {
    fontSize: "18px",
    lineHeight: "1.6",
    maxWidth: "600px",
    margin: "0 auto 24px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#374151"
  };

  const sectionTitleStyle = {
    fontSize: "18px",
    fontWeight: "600",
    marginBottom: "12px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#1f2937"
  };

  const traitsListStyle = {
    listStyle: "none",
    padding: 0,
    margin: "0 0 24px 0",
    display: "flex",
    flexWrap: "wrap" as const,
    justifyContent: "center",
    gap: "8px"
  };

  const traitItemStyle = {
    background: "#e5e7eb",
    padding: "6px 12px",
    borderRadius: "20px",
    fontSize: "14px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#374151"
  };

  const examplesStyle = {
    fontSize: "16px",
    fontFamily: "'Montserrat', sans-serif",
    color: "#6b7280"
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø–ª–∞—à–∫–∞ —Å —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º, –±–µ–ª—ã–º —à—Ä–∏—Ñ—Ç–æ–º –∏ —ç–º–æ–¥–∂–∏ –¥–µ–≤—É—à–∫–∏
  const ctaBlockStyle = {
    padding: "32px",
    backgroundColor: "#3b82f6", // –°–∏–Ω–∏–π —Ü–≤–µ—Ç –≤–º–µ—Å—Ç–æ –∂–µ–ª—Ç–æ–≥–æ
    borderRadius: "12px",
    textAlign: "center" as const,
    marginBottom: "32px",
    border: "2px solid #2563eb", // –°–∏–Ω—è—è —Ä–∞–º–∫–∞
    position: "relative" as const
  };

  const ctaTextStyle = {
    fontSize: "18px",
    lineHeight: "1.6",
    marginBottom: "16px",
    fontFamily: "'Montserrat', sans-serif",
    color: "white", // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    gap: "12px"
  };

  const ctaButtonStyle = {
    display: "inline-block",
    backgroundColor: "white", // –ë–µ–ª–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞ —Å–∏–Ω–µ–º —Ñ–æ–Ω–µ
    color: "#3b82f6", // –°–∏–Ω–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
    padding: "16px 32px",
    borderRadius: "8px",
    fontSize: "16px",
    fontWeight: "600",
    textDecoration: "none",
    fontFamily: "'Montserrat', sans-serif",
    transition: "background-color 0.2s ease",
    border: "2px solid white"
  };

  const restartButtonStyle = {
    background: "none",
    border: "none",
    color: "#3b82f6",
    fontSize: "16px",
    fontFamily: "'Montserrat', sans-serif",
    textDecoration: "underline",
    cursor: "pointer",
    padding: "8px 0",
    display: "block",
    margin: "0 auto"
  };

  return (
    <div style={containerStyle}>
      <h1 style={mainTitleStyle}>–í–∞—à–∏ –∞—Ä—Ö–µ—Ç–∏–ø—ã:</h1>

      {[first, second].map(([arch], index) => {
        const data = archetypeDescriptions[arch as keyof typeof archetypeDescriptions];
        if (!data) return null;

        return (
          <div key={arch} style={archetypeContainerStyle}>
            <span style={emojiStyle}>{data.emoji}</span>
            <h2 style={{ ...archetypeNameStyle, color: data.color }}>
              {index === 0 ? "–û–°–ù–û–í–ù–û–ô: " : "–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô: "}{data.name}
            </h2>
            <p style={descriptionStyle}>{data.description}</p>

            <div>
              <h3 style={sectionTitleStyle}>–ö–ª—é—á–µ–≤—ã–µ —á–µ—Ä—Ç—ã:</h3>
              <ul style={traitsListStyle}>
                {data.traits.map((trait, idx) => (
                  <li key={idx} style={traitItemStyle}>{trait}</li>
                ))}
              </ul>
            </div>

            <div>
              <h3 style={sectionTitleStyle}>–ü—Ä–∏–º–µ—Ä—ã –±—Ä–µ–Ω–¥–æ–≤:</h3>
              <p style={examplesStyle}>{data.examples.join(", ")}</p>
            </div>
          </div>
        );
      })}

      <div style={ctaBlockStyle}>
        <p style={ctaTextStyle}>
          üë©‚Äçüíº –û —Ç–æ–º, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ, —á—Ç–æ –µ—â–µ —Å—Ç–æ–∏—Ç –∑–∞ –∫–∞–∂–¥—ã–º –∞—Ä—Ö–µ—Ç–∏–ø–æ–º, –∏ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –≤–∞—Å —É—Å–∏–ª–∏—Ç—å
        </p>
        <p style={ctaTextStyle}>
          –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ –º–æ–µ–º –ì–∞–π–¥–µ –ø–æ –∞—Ä—Ö–µ—Ç–∏–ø–∞–º.
        </p>
        <a
          href="https://kosovetis.com"
          target="_blank"
          rel="noopener noreferrer"
          style={ctaButtonStyle}
          onMouseEnter={(e) => {
            e.currentTarget.style.backgroundColor = "#f3f4f6";
            e.currentTarget.style.color = "#1f2937";
          }}
          onMouseLeave={(e) => {
            e.currentTarget.style.backgroundColor = "white";
            e.currentTarget.style.color = "#3b82f6";
          }}
        >
          –ü–û–õ–£–ß–ò–¢–¨ –ì–ê–ô–î
        </a>
      </div>

      <div style={{ textAlign: "center" }}>
        <button onClick={onRestart} style={restartButtonStyle}>
          –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
        </button>
      </div>
    </div>
  );
}